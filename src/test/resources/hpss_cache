#
# Copyright      Jonathan Schaeffer 2009-2010,
#                CC-IN2P3, CNRS <jonathan.schaeffer@cc.in2p3.fr>
# Contributors   Andres Gomez,
#                CC-IN2P3, CNRS <andres.gomez@cc.in2p3.fr>
#
# This software is a computer program whose purpose is to schedule, sort
# and submit file requests to the hierarchical storage system HPSS.
#
# This software is governed by the CeCILL license under French law and
# abiding by the rules of distribution of free software.  You can  use,
# modify and/or redistribute the software under the terms of the CeCILL
# license as circulated by CEA, CNRS and INRIA at the following URL
# "http://www.cecill.info".
#
# As a counterpart to the access to the source code and rights to copy,
# modify and redistribute granted by the license, users are provided only
# with a limited warranty  and the software's author,  the holder of the
# economic rights, and the successive licensors have only limited
# liability.
#
# In this respect, the user's attention is drawn to the risks associated
# with loading,  using,  modifying and/or developing or reproducing the
# software by the user in light of its specific status of free software,
# that may mean  that it is complicated to manipulate,  and  that  also
# therefore means  that it is reserved for developers  and  experienced
# professionals having in-depth computer knowledge. Users are therefore
# encouraged to load and test the software's suitability as regards their
# requirements in conditions enabling the security of their systems and/or
# data to be ensured and,  more generally, to use and operate it in the
# same conditions as regards security.
#
# The fact that you are presently reading this means that you have had
# knowledge of the CeCILL license and that you accept its terms.


# This is an HPSS mock cache, that generates random values.
# For a given tape, it return the position, the tape and the storage level.

# Tape types
Types="IT
IS
JT"
type=($Types)
num_types=${#type[*]}
tapeType=${type[$((RANDOM%num_types))]}

# Tape number
tapeNumber=$((RANDOM%9999))

if [ ${tapeNumber} -eq 0 ]; then
    volid=${tapeType}0000
elif [ ${tapeNumber} -lt 10 ]; then
    volid=${tapeType}000${tapeNumber}
elif [ ${tapeNumber} -lt 100 ]; then
    volid=${tapeType}00${tapeNumber}
elif [ ${tapeNumber} -lt 1000 ]; then
    volid=${tapeType}0${tapeNumber}
else
    volid=${tapeType}${tapeNumber}
fi

# Tape position
position=$((RANDOM%100))

# File's size
size=$((RANDOM%1000))

# File's state
States="purged
not
purged
purged"
state=($States)
num_states=${#state[*]}
fileState=${state[$((RANDOM%num_states))]}

if [ "${fileState}" = "not" ]; then
    fileState="not purged"
fi

filename=$6
if [ -z ${filename} ]; then
    filename=NO_FILE
elif [ "${filename}" = "/hpss/filename" ]; then
    size=564
    position=123
    volid=IT9876
    fileState="not purged"
fi

echo FILE: ${filename}
echo TYPE: file, COS: 11, Family: 0, Uid: 2543, Gid: 182
echo Size: ${size} MB, Read count: 1, Write count: 1
echo Current Open Count: 0, disk cache: ${fileState}, migrated, not locked
echo VOLID: ${volid}, Position: ${position}
